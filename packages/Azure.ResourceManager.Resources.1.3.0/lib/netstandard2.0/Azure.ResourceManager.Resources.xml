<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.ResourceManager.Resources</name>
    </assembly>
    <members>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationData">
            <summary> A class representing the ArmApplication data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationData.#ctor(Azure.Core.AzureLocation,System.String)">
            <summary> Initializes a new instance of ArmApplicationData. </summary>
            <param name="location"> The location. </param>
            <param name="kind"> The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="kind" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationSku,Azure.ResourceManager.Models.ArmPlan,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.BinaryData,System.BinaryData,System.Nullable{Azure.ResourceManager.Resources.Models.ResourcesProvisioningState},Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails,Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy,System.Nullable{System.Guid},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization},System.Nullable{Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode},Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact,Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmApplicationArtifact},Azure.ResourceManager.Resources.Models.ArmApplicationDetails,Azure.ResourceManager.Resources.Models.ArmApplicationDetails)">
            <summary> Initializes a new instance of ArmApplicationData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="managedBy"> ID of the resource that manages this resource. </param>
            <param name="sku"> The SKU of the resource. </param>
            <param name="plan"> The plan information. </param>
            <param name="kind"> The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="managedResourceGroupId"> The managed resource group Id. </param>
            <param name="applicationDefinitionId"> The fully qualified path of managed application definition Id. </param>
            <param name="parameters"> Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string. </param>
            <param name="outputs"> Name and value pairs that define the managed application outputs. </param>
            <param name="provisioningState"> The managed application provisioning state. </param>
            <param name="billingDetails"> The managed application billing details. </param>
            <param name="jitAccessPolicy"> The managed application Jit access policy. </param>
            <param name="publisherTenantId"> The publisher tenant Id. </param>
            <param name="authorizations"> The  read-only authorizations property that is retrieved from the application package. </param>
            <param name="managementMode"> The managed application management mode. </param>
            <param name="customerSupport"> The read-only customer support property that is retrieved from the application package. </param>
            <param name="supportUris"> The read-only support URLs property that is retrieved from the application package. </param>
            <param name="artifacts"> The collection of managed application artifacts. </param>
            <param name="createdBy"> The client entity that created the JIT request. </param>
            <param name="updatedBy"> The client entity that last updated the JIT request. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Plan">
            <summary> The plan information. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Kind">
            <summary> The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Identity">
            <summary> The identity of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.ManagedResourceGroupId">
            <summary> The managed resource group Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.ApplicationDefinitionId">
            <summary> The fully qualified path of managed application definition Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Parameters">
            <summary> Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Outputs">
            <summary> Name and value pairs that define the managed application outputs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.ProvisioningState">
            <summary> The managed application provisioning state. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.BillingDetails">
            <summary> The managed application billing details. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.BillingDetailsResourceUsageId">
            <summary> The managed application resource usage Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.JitAccessPolicy">
            <summary> The managed application Jit access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.PublisherTenantId">
            <summary> The publisher tenant Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Authorizations">
            <summary> The  read-only authorizations property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.ManagementMode">
            <summary> The managed application management mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.CustomerSupport">
            <summary> The read-only customer support property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.SupportUris">
            <summary> The read-only support URLs property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.Artifacts">
            <summary> The collection of managed application artifacts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.CreatedBy">
            <summary> The client entity that created the JIT request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationData.UpdatedBy">
            <summary> The client entity that last updated the JIT request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionData">
            <summary> A class representing the ArmApplicationDefinition data model. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.DeploymentMode">
            <summary> The managed application deployment mode. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.#ctor(Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel)">
            <summary> Initializes a new instance of ArmApplicationDefinitionData. </summary>
            <param name="location"> The location. </param>
            <param name="lockLevel"> The managed application lock level. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationSku,Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization},System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact},System.String,System.Uri,System.BinaryData,System.BinaryData,Azure.ResourceManager.Resources.Models.ArmApplicationNotificationPolicy,Azure.ResourceManager.Resources.Models.ArmApplicationPackageLockingPolicy,Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentPolicy,Azure.ResourceManager.Resources.Models.ArmApplicationManagementPolicy,System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ArmApplicationPolicy})">
            <summary> Initializes a new instance of ArmApplicationDefinitionData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="managedBy"> ID of the resource that manages this resource. </param>
            <param name="sku"> The SKU of the resource. </param>
            <param name="lockLevel"> The managed application lock level. </param>
            <param name="displayName"> The managed application definition display name. </param>
            <param name="isEnabled"> A value indicating whether the package is enabled or not. </param>
            <param name="authorizations"> The managed application provider authorizations. </param>
            <param name="artifacts"> The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition. </param>
            <param name="description"> The managed application definition description. </param>
            <param name="packageFileUri"> The managed application definition package file Uri. Use this element. </param>
            <param name="mainTemplate"> The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string. </param>
            <param name="createUiDefinition"> The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string. </param>
            <param name="notificationPolicy"> The managed application notification policy. </param>
            <param name="lockingPolicy"> The managed application locking policy. </param>
            <param name="deploymentPolicy"> The managed application deployment policy. </param>
            <param name="managementPolicy"> The managed application management policy that determines publisher's access to the managed resource group. </param>
            <param name="policies"> The managed application provider policies. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.LockLevel">
            <summary> The managed application lock level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.DisplayName">
            <summary> The managed application definition display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.IsEnabled">
            <summary> A value indicating whether the package is enabled or not. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.Authorizations">
            <summary> The managed application provider authorizations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.Artifacts">
            <summary> The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.Description">
            <summary> The managed application definition description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.PackageFileUri">
            <summary> The managed application definition package file Uri. Use this element. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.MainTemplate">
            <summary> The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.CreateUiDefinition">
            <summary> The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.NotificationPolicy">
            <summary> The managed application notification policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.NotificationEndpoints">
            <summary> The managed application notification endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.LockingPolicy">
            <summary> The managed application locking policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.LockingAllowedActions">
            <summary> The deny assignment excluded actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.DeploymentPolicy">
            <summary> The managed application deployment policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.ManagementPolicy">
            <summary> The managed application management policy that determines publisher's access to the managed resource group. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.ManagementMode">
            <summary> The managed application management mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionData.Policies">
            <summary> The managed application provider policies. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentScriptData">
            <summary>
            A class representing the ArmDeploymentScript data model.
            Please note <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptData" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Resources.Models.AzureCliScript" /> and <see cref="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of ArmDeploymentScriptData. </summary>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity,Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Resources.Models.ScriptType)">
            <summary> Initializes a new instance of ArmDeploymentScriptData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="identity"> Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported. </param>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
            <param name="tags"> Resource tags. </param>
            <param name="kind"> Type of the script. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptData.Identity">
            <summary> Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptData.Location">
            <summary> The location of the ACI and the storage account for the deployment script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptData.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptData.Kind">
            <summary> Type of the script. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationPatch">
            <summary> Information about managed application. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of ArmApplicationPatch. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationSku,Azure.ResourceManager.Models.ArmPlan,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.BinaryData,System.BinaryData,System.Nullable{Azure.ResourceManager.Resources.Models.ResourcesProvisioningState},Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails,Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy,System.Nullable{System.Guid},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization},System.Nullable{Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode},Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact,Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmApplicationArtifact},Azure.ResourceManager.Resources.Models.ArmApplicationDetails,Azure.ResourceManager.Resources.Models.ArmApplicationDetails)">
            <summary> Initializes a new instance of ArmApplicationPatch. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="managedBy"> ID of the resource that manages this resource. </param>
            <param name="sku"> The SKU of the resource. </param>
            <param name="plan"> The plan information. </param>
            <param name="kind"> The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="managedResourceGroupId"> The managed resource group Id. </param>
            <param name="applicationDefinitionId"> The fully qualified path of managed application definition Id. </param>
            <param name="parameters"> Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string. </param>
            <param name="outputs"> Name and value pairs that define the managed application outputs. </param>
            <param name="provisioningState"> The managed application provisioning state. </param>
            <param name="billingDetails"> The managed application billing details. </param>
            <param name="jitAccessPolicy"> The managed application Jit access policy. </param>
            <param name="publisherTenantId"> The publisher tenant Id. </param>
            <param name="authorizations"> The  read-only authorizations property that is retrieved from the application package. </param>
            <param name="managementMode"> The managed application management mode. </param>
            <param name="customerSupport"> The read-only customer support property that is retrieved from the application package. </param>
            <param name="supportUris"> The read-only support URLs property that is retrieved from the application package. </param>
            <param name="artifacts"> The collection of managed application artifacts. </param>
            <param name="createdBy"> The client entity that created the JIT request. </param>
            <param name="updatedBy"> The client entity that last updated the JIT request. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Plan">
            <summary> The plan information. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Kind">
            <summary> The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Identity">
            <summary> The identity of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.ManagedResourceGroupId">
            <summary> The managed resource group Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.ApplicationDefinitionId">
            <summary> The fully qualified path of managed application definition Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Parameters">
            <summary> Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Outputs">
            <summary> Name and value pairs that define the managed application outputs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.ProvisioningState">
            <summary> The managed application provisioning state. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.BillingDetails">
            <summary> The managed application billing details. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.BillingDetailsResourceUsageId">
            <summary> The managed application resource usage Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.JitAccessPolicy">
            <summary> The managed application Jit access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.PublisherTenantId">
            <summary> The publisher tenant Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Authorizations">
            <summary> The  read-only authorizations property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.ManagementMode">
            <summary> The managed application management mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.CustomerSupport">
            <summary> The read-only customer support property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.SupportUris">
            <summary> The read-only support URLs property that is retrieved from the application package. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.Artifacts">
            <summary> The collection of managed application artifacts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.CreatedBy">
            <summary> The client entity that created the JIT request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPatch.UpdatedBy">
            <summary> The client entity that last updated the JIT request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended">
            <summary> Deployment properties with additional details. </summary>
            <summary> Deployment properties with additional details. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.DebugSettingDetailLevel">
            <summary> Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.#ctor">
            <summary> Initializes a new instance of ArmDeploymentPropertiesExtended. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.#ctor(System.Nullable{Azure.ResourceManager.Resources.Models.ResourcesProvisioningState},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan},System.BinaryData,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ResourceProviderData},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmDependency},Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink,System.BinaryData,Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink,System.Nullable{Azure.ResourceManager.Resources.Models.ArmDeploymentMode},Azure.ResourceManager.Resources.Models.DebugSetting,Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.SubResource},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.SubResource},Azure.ResponseError)">
            <summary> Initializes a new instance of ArmDeploymentPropertiesExtended. </summary>
            <param name="provisioningState"> Denotes the state of provisioning. </param>
            <param name="correlationId"> The correlation ID of the deployment. </param>
            <param name="timestamp"> The timestamp of the template deployment. </param>
            <param name="duration"> The duration of the template deployment. </param>
            <param name="outputs"> Key/value pairs that represent deployment output. </param>
            <param name="providers"> The list of resource providers needed for the deployment. </param>
            <param name="dependencies"> The list of deployment dependencies. </param>
            <param name="templateLink"> The URI referencing the template. </param>
            <param name="parameters"> Deployment parameters. </param>
            <param name="parametersLink"> The URI referencing the parameters. </param>
            <param name="mode"> The deployment mode. Possible values are Incremental and Complete. </param>
            <param name="debugSetting"> The debug setting of the deployment. </param>
            <param name="errorDeployment"> The deployment on error behavior. </param>
            <param name="templateHash"> The hash produced for the template. </param>
            <param name="outputResources"> Array of provisioned resources. </param>
            <param name="validatedResources"> Array of validated resources. </param>
            <param name="error"> The deployment error. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.ProvisioningState">
            <summary> Denotes the state of provisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.CorrelationId">
            <summary> The correlation ID of the deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Timestamp">
            <summary> The timestamp of the template deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Duration">
            <summary> The duration of the template deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Outputs">
            <summary> Key/value pairs that represent deployment output. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Providers">
            <summary> The list of resource providers needed for the deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Dependencies">
            <summary> The list of deployment dependencies. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.TemplateLink">
            <summary> The URI referencing the template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Parameters">
            <summary> Deployment parameters. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.ParametersLink">
            <summary> The URI referencing the parameters. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Mode">
            <summary> The deployment mode. Possible values are Incremental and Complete. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.DebugSetting">
            <summary> The debug setting of the deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.ErrorDeployment">
            <summary> The deployment on error behavior. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.TemplateHash">
            <summary> The hash produced for the template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.OutputResources">
            <summary> Array of provisioned resources. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.ValidatedResources">
            <summary> Array of validated resources. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended.Error">
            <summary> The deployment error. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase">
            <summary> Common properties for the deployment script. </summary>
            <summary> Common properties for the deployment script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.ContainerGroupName">
            <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.#ctor">
            <summary> Initializes a new instance of ArmDeploymentScriptPropertiesBase. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.ContainerSettings">
            <summary> Container settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.StorageAccountSettings">
            <summary> Storage Account settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.CleanupPreference">
            <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.ProvisioningState">
            <summary> State of the script execution. This only appears in the response. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.Status">
            <summary> Contains the results of script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPropertiesBase.Outputs">
            <summary> List of script outputs. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptStatus">
            <summary> Generic object modeling results of script execution. </summary>
            <summary> Generic object modeling results of script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.ExpirationOn">
            <summary> Time the deployment script resource will expire. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptStatus.#ctor">
            <summary> Initializes a new instance of ScriptStatus. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptStatus.#ctor(System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResponseError)">
            <summary> Initializes a new instance of ScriptStatus. </summary>
            <param name="containerInstanceId"> ACI resource Id. </param>
            <param name="storageAccountId"> Storage account resource Id. </param>
            <param name="startOn"> Start time of the script execution. </param>
            <param name="endOn"> End time of the script execution. </param>
            <param name="expireOn"> Time the deployment script resource will expire. </param>
            <param name="error"> Error that is relayed from the script execution. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.ContainerInstanceId">
            <summary> ACI resource Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.StorageAccountId">
            <summary> Storage account resource Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.StartOn">
            <summary> Start time of the script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.EndOn">
            <summary> End time of the script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.ExpireOn">
            <summary> Time the deployment script resource will expire. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStatus.Error">
            <summary> Error that is relayed from the script execution. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifact">
            <summary> Managed application artifact. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifact.#ctor(Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName,System.Uri,Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType)">
            <summary> Initializes a new instance of ArmApplicationArtifact. </summary>
            <param name="name"> The managed application artifact name. </param>
            <param name="uri"> The managed application artifact blob uri. </param>
            <param name="artifactType"> The managed application artifact type. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifact.Name">
            <summary> The managed application artifact name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifact.Uri">
            <summary> The managed application artifact blob uri. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifact.ArtifactType">
            <summary> The managed application artifact type. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName">
            <summary> The managed application artifact name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.ViewDefinition">
            <summary> ViewDefinition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.Authorizations">
            <summary> Authorizations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.CustomRoleDefinition">
            <summary> CustomRoleDefinition. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.op_Equality(Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName,Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.op_Inequality(Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName,Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.Equals(Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType">
            <summary> The managed application artifact type. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType.Template">
            <summary> Template. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType.Custom">
            <summary> Custom. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization">
            <summary> The managed application provider authorization. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization.#ctor(System.Guid,System.String)">
            <summary> Initializes a new instance of ArmApplicationAuthorization. </summary>
            <param name="principalId"> The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources. </param>
            <param name="roleDefinitionId"> The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization.PrincipalId">
            <summary> The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationAuthorization.RoleDefinitionId">
            <summary> The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails">
            <summary> Managed application billing details definition. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails.#ctor">
            <summary> Initializes a new instance of ArmApplicationBillingDetails. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails.#ctor(System.String)">
            <summary> Initializes a new instance of ArmApplicationBillingDetails. </summary>
            <param name="resourceUsageId"> The managed application resource usage Id. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationBillingDetails.ResourceUsageId">
            <summary> The managed application resource usage Id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact">
            <summary> Application definition artifact. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact.#ctor(Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName,System.Uri,Azure.ResourceManager.Resources.Models.ArmApplicationArtifactType)">
            <summary> Initializes a new instance of ArmApplicationDefinitionArtifact. </summary>
            <param name="name"> The managed application definition artifact name. </param>
            <param name="uri"> The managed application definition artifact blob uri. </param>
            <param name="artifactType"> The managed application definition artifact type. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact.Name">
            <summary> The managed application definition artifact name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact.Uri">
            <summary> The managed application definition artifact blob uri. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifact.ArtifactType">
            <summary> The managed application definition artifact type. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName">
            <summary> The managed application artifact name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.ApplicationResourceTemplate">
            <summary> ApplicationResourceTemplate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.CreateUiDefinition">
            <summary> CreateUiDefinition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.MainTemplateParameters">
            <summary> MainTemplateParameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.op_Equality(Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName,Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.op_Inequality(Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName,Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.Equals(Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionArtifactName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionListResult">
            <summary> List of managed application definitions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionListResult.#ctor">
            <summary> Initializes a new instance of ArmApplicationDefinitionListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ArmApplicationDefinitionData},System.String)">
            <summary> Initializes a new instance of ArmApplicationDefinitionListResult. </summary>
            <param name="value"> The array of managed application definitions. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionListResult.Value">
            <summary> The array of managed application definitions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDefinitionListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode">
            <summary> The deployment mode. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.Incremental">
            <summary> Incremental. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.Complete">
            <summary> Complete. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.op_Equality(Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode,Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.op_Inequality(Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode,Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.Equals(Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentPolicy">
            <summary> Managed application deployment policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentPolicy.#ctor(Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentMode)">
            <summary> Initializes a new instance of ArmApplicationDeploymentPolicy. </summary>
            <param name="deploymentMode"> The managed application deployment mode. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDeploymentPolicy.DeploymentMode">
            <summary> The managed application deployment mode. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationDetails">
            <summary> The application client details to track the entity creating/updating the managed app resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDetails.#ctor">
            <summary> Initializes a new instance of ArmApplicationDetails. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationDetails.#ctor(System.Nullable{System.Guid},System.String,System.Nullable{System.Guid})">
            <summary> Initializes a new instance of ArmApplicationDetails. </summary>
            <param name="objectId"> The client Oid. </param>
            <param name="puid"> The client Puid. </param>
            <param name="applicationId"> The client application Id. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDetails.ObjectId">
            <summary> The client Oid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDetails.Puid">
            <summary> The client Puid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationDetails.ApplicationId">
            <summary> The client application Id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy">
            <summary> Managed application Jit access policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.#ctor(System.Boolean)">
            <summary> Initializes a new instance of ArmApplicationJitAccessPolicy. </summary>
            <param name="jitAccessEnabled"> Whether the JIT access is enabled. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.#ctor(System.Boolean,System.Nullable{Azure.ResourceManager.Resources.Models.JitApprovalMode},System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.JitApprover},System.Nullable{System.TimeSpan})">
            <summary> Initializes a new instance of ArmApplicationJitAccessPolicy. </summary>
            <param name="jitAccessEnabled"> Whether the JIT access is enabled. </param>
            <param name="jitApprovalMode"> JIT approval mode. </param>
            <param name="jitApprovers"> The JIT approvers. </param>
            <param name="maximumJitAccessDuration"> The maximum duration JIT access is granted. This is an ISO8601 time period value. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.JitAccessEnabled">
            <summary> Whether the JIT access is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.JitApprovalMode">
            <summary> JIT approval mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.JitApprovers">
            <summary> The JIT approvers. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationJitAccessPolicy.MaximumJitAccessDuration">
            <summary> The maximum duration JIT access is granted. This is an ISO8601 time period value. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationListResult">
            <summary> List of managed applications. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationListResult.#ctor">
            <summary> Initializes a new instance of ArmApplicationListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ArmApplicationData},System.String)">
            <summary> Initializes a new instance of ArmApplicationListResult. </summary>
            <param name="value"> The array of managed applications. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationListResult.Value">
            <summary> The array of managed applications. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel">
            <summary> The managed application lock level. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel.None">
            <summary> None. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel.CanNotDelete">
            <summary> CanNotDelete. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationLockLevel.ReadOnly">
            <summary> ReadOnly. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity">
            <summary> Identity for the resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.#ctor">
            <summary> Initializes a new instance of ArmApplicationManagedIdentity. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType},System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity})">
            <summary> Initializes a new instance of ArmApplicationManagedIdentity. </summary>
            <param name="principalId"> The principal ID of resource identity. </param>
            <param name="tenantId"> The tenant ID of resource. </param>
            <param name="identityType"> The identity type. </param>
            <param name="userAssignedIdentities"> The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.PrincipalId">
            <summary> The principal ID of resource identity. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.TenantId">
            <summary> The tenant ID of resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.IdentityType">
            <summary> The identity type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentity.UserAssignedIdentities">
            <summary> The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType">
            <summary> The identity type. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType.None">
            <summary> None. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType.SystemAssigned">
            <summary> SystemAssigned. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType.UserAssigned">
            <summary> UserAssigned. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmApplicationManagedIdentityType.SystemAssignedUserAssigned">
            <summary> SystemAssigned, UserAssigned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode">
            <summary> The management mode. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.Unmanaged">
            <summary> Unmanaged. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.Managed">
            <summary> Managed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.op_Equality(Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode,Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.op_Inequality(Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode,Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.Equals(Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationManagementPolicy">
            <summary> Managed application management policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementPolicy.#ctor">
            <summary> Initializes a new instance of ArmApplicationManagementPolicy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationManagementPolicy.#ctor(System.Nullable{Azure.ResourceManager.Resources.Models.ArmApplicationManagementMode})">
            <summary> Initializes a new instance of ArmApplicationManagementPolicy. </summary>
            <param name="mode"> The managed application management mode. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationManagementPolicy.Mode">
            <summary> The managed application management mode. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationEndpoint">
            <summary> Managed application notification endpoint. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationEndpoint.#ctor(System.Uri)">
            <summary> Initializes a new instance of ArmApplicationNotificationEndpoint. </summary>
            <param name="uri"> The managed application notification endpoint uri. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationEndpoint.Uri">
            <summary> The managed application notification endpoint uri. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationPolicy">
            <summary> Managed application notification policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationPolicy.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Resources.Models.ArmApplicationNotificationEndpoint})">
            <summary> Initializes a new instance of ArmApplicationNotificationPolicy. </summary>
            <param name="notificationEndpoints"> The managed application notification endpoint. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="notificationEndpoints" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationPolicy.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ArmApplicationNotificationEndpoint})">
            <summary> Initializes a new instance of ArmApplicationNotificationPolicy. </summary>
            <param name="notificationEndpoints"> The managed application notification endpoint. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationNotificationPolicy.NotificationEndpoints">
            <summary> The managed application notification endpoint. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact">
            <summary> The application package contact information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of ArmApplicationPackageContact. </summary>
            <param name="email"> The contact email. </param>
            <param name="phone"> The contact phone number. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="email" /> or <paramref name="phone" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of ArmApplicationPackageContact. </summary>
            <param name="contactName"> The contact name. </param>
            <param name="email"> The contact email. </param>
            <param name="phone"> The contact phone number. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact.ContactName">
            <summary> The contact name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact.Email">
            <summary> The contact email. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageContact.Phone">
            <summary> The contact phone number. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationPackageLockingPolicy">
            <summary> Managed application locking policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageLockingPolicy.#ctor">
            <summary> Initializes a new instance of ArmApplicationPackageLockingPolicy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageLockingPolicy.#ctor(System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of ArmApplicationPackageLockingPolicy. </summary>
            <param name="allowedActions"> The deny assignment excluded actions. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageLockingPolicy.AllowedActions">
            <summary> The deny assignment excluded actions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris">
            <summary> The appliance package support URLs. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris.#ctor">
            <summary> Initializes a new instance of ArmApplicationPackageSupportUris. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris.#ctor(System.Uri,System.Uri)">
            <summary> Initializes a new instance of ArmApplicationPackageSupportUris. </summary>
            <param name="azurePublicCloudUri"> The public azure support URL. </param>
            <param name="azureGovernmentUri"> The government cloud support URL. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris.AzurePublicCloudUri">
            <summary> The public azure support URL. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPackageSupportUris.AzureGovernmentUri">
            <summary> The government cloud support URL. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy">
            <summary> Managed application policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy.#ctor">
            <summary> Initializes a new instance of ArmApplicationPolicy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of ArmApplicationPolicy. </summary>
            <param name="name"> The policy name. </param>
            <param name="policyDefinitionId"> The policy definition Id. </param>
            <param name="parameters"> The policy parameters. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy.Name">
            <summary> The policy name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy.PolicyDefinitionId">
            <summary> The policy definition Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationPolicy.Parameters">
            <summary> The policy parameters. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationResourceData">
            <summary> Resource information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationResourceData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of ArmApplicationResourceData. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationResourceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationSku)">
            <summary> Initializes a new instance of ArmApplicationResourceData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="managedBy"> ID of the resource that manages this resource. </param>
            <param name="sku"> The SKU of the resource. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationResourceData.ManagedBy">
            <summary> ID of the resource that manages this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationResourceData.Sku">
            <summary> The SKU of the resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationSku">
            <summary> SKU for the resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationSku.#ctor(System.String)">
            <summary> Initializes a new instance of ArmApplicationSku. </summary>
            <param name="name"> The SKU name. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationSku.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of ArmApplicationSku. </summary>
            <param name="name"> The SKU name. </param>
            <param name="tier"> The SKU tier. </param>
            <param name="size"> The SKU size. </param>
            <param name="family"> The SKU family. </param>
            <param name="model"> The SKU model. </param>
            <param name="capacity"> The SKU capacity. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Name">
            <summary> The SKU name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Tier">
            <summary> The SKU tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Size">
            <summary> The SKU size. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Family">
            <summary> The SKU family. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Model">
            <summary> The SKU model. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationSku.Capacity">
            <summary> The SKU capacity. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity">
            <summary> Represents the user assigned identity that is contained within the UserAssignedIdentities dictionary on ResourceIdentity. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity.#ctor">
            <summary> Initializes a new instance of ArmApplicationUserAssignedIdentity. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary> Initializes a new instance of ArmApplicationUserAssignedIdentity. </summary>
            <param name="principalId"> The principal id of user assigned identity. </param>
            <param name="tenantId"> The tenant id of user assigned identity. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity.PrincipalId">
            <summary> The principal id of user assigned identity. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmApplicationUserAssignedIdentity.TenantId">
            <summary> The tenant id of user assigned identity. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDependency">
            <summary> Deployment dependency information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDependency.#ctor">
            <summary> Initializes a new instance of ArmDependency. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDependency.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.BasicArmDependency},System.String,System.Nullable{Azure.Core.ResourceType},System.String)">
            <summary> Initializes a new instance of ArmDependency. </summary>
            <param name="dependsOn"> The list of dependencies. </param>
            <param name="id"> The ID of the dependency. </param>
            <param name="resourceType"> The dependency resource type. </param>
            <param name="resourceName"> The dependency resource name. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDependency.DependsOn">
            <summary> The list of dependencies. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDependency.Id">
            <summary> The ID of the dependency. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDependency.ResourceType">
            <summary> The dependency resource type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDependency.ResourceName">
            <summary> The dependency resource name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentContent">
            <summary> Deployment operation parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentContent.#ctor(Azure.ResourceManager.Resources.Models.ArmDeploymentProperties)">
            <summary> Initializes a new instance of ArmDeploymentContent. </summary>
            <param name="properties"> The deployment properties. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="properties" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentContent.Location">
            <summary> The location to store the deployment data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentContent.Properties">
            <summary> The deployment properties. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentContent.Tags">
            <summary> Deployment tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentExportResult">
            <summary> The deployment export result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentExportResult.#ctor">
            <summary> Initializes a new instance of ArmDeploymentExportResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentExportResult.#ctor(System.BinaryData)">
            <summary> Initializes a new instance of ArmDeploymentExportResult. </summary>
            <param name="template"> The template content. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentExportResult.Template">
            <summary> The template content. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentListResult">
            <summary> List of deployments. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentListResult.#ctor">
            <summary> Initializes a new instance of ArmDeploymentListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ArmDeploymentData},System.String)">
            <summary> Initializes a new instance of ArmDeploymentListResult. </summary>
            <param name="value"> An array of deployments. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentListResult.Value">
            <summary> An array of deployments. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentMode">
            <summary> The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmDeploymentMode.Incremental">
            <summary> Incremental. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ArmDeploymentMode.Complete">
            <summary> Complete. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation">
            <summary> Deployment operation information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation.#ctor">
            <summary> Initializes a new instance of ArmDeploymentOperation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation.#ctor(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties)">
            <summary> Initializes a new instance of ArmDeploymentOperation. </summary>
            <param name="id"> Full deployment operation ID. </param>
            <param name="operationId"> Deployment operation ID. </param>
            <param name="properties"> Deployment properties. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation.Id">
            <summary> Full deployment operation ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation.OperationId">
            <summary> Deployment operation ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation.Properties">
            <summary> Deployment properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties">
            <summary> Deployment operation properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.#ctor">
            <summary> Initializes a new instance of ArmDeploymentOperationProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.#ctor(System.Nullable{Azure.ResourceManager.Resources.Models.ProvisioningOperationKind},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan},System.String,System.String,Azure.ResourceManager.Resources.Models.StatusMessage,Azure.ResourceManager.Resources.Models.TargetResource,Azure.ResourceManager.Resources.Models.HttpMessage,Azure.ResourceManager.Resources.Models.HttpMessage)">
            <summary> Initializes a new instance of ArmDeploymentOperationProperties. </summary>
            <param name="provisioningOperation"> The name of the current provisioning operation. </param>
            <param name="provisioningState"> The state of the provisioning. </param>
            <param name="timestamp"> The date and time of the operation. </param>
            <param name="duration"> The duration of the operation. </param>
            <param name="serviceRequestId"> Deployment operation service request id. </param>
            <param name="statusCode"> Operation status code from the resource provider. This property may not be set if a response has not yet been received. </param>
            <param name="statusMessage"> Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider. </param>
            <param name="targetResource"> The target resource. </param>
            <param name="request"> The HTTP request message. </param>
            <param name="response"> The HTTP response message. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.ProvisioningOperation">
            <summary> The name of the current provisioning operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.ProvisioningState">
            <summary> The state of the provisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.Timestamp">
            <summary> The date and time of the operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.Duration">
            <summary> The duration of the operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.ServiceRequestId">
            <summary> Deployment operation service request id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.StatusCode">
            <summary> Operation status code from the resource provider. This property may not be set if a response has not yet been received. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.StatusMessage">
            <summary> Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.TargetResource">
            <summary> The target resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.Request">
            <summary> The HTTP request message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.RequestContent">
            <summary> HTTP message content. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.Response">
            <summary> The HTTP response message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationProperties.ResponseContent">
            <summary> HTTP message content. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationsListResult">
            <summary> List of deployment operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationsListResult.#ctor">
            <summary> Initializes a new instance of ArmDeploymentOperationsListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationsListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.ArmDeploymentOperation},System.String)">
            <summary> Initializes a new instance of ArmDeploymentOperationsListResult. </summary>
            <param name="value"> An array of deployment operations. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationsListResult.Value">
            <summary> An array of deployment operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentOperationsListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink">
            <summary> Entity representing the reference to the deployment parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink.#ctor(System.Uri)">
            <summary> Initializes a new instance of ArmDeploymentParametersLink. </summary>
            <param name="uri"> The URI of the parameters file. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink.#ctor(System.Uri,System.String)">
            <summary> Initializes a new instance of ArmDeploymentParametersLink. </summary>
            <param name="uri"> The URI of the parameters file. </param>
            <param name="contentVersion"> If included, must match the ContentVersion in the template. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink.Uri">
            <summary> The URI of the parameters file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentParametersLink.ContentVersion">
            <summary> If included, must match the ContentVersion in the template. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties">
            <summary> Deployment properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.#ctor(Azure.ResourceManager.Resources.Models.ArmDeploymentMode)">
            <summary> Initializes a new instance of ArmDeploymentProperties. </summary>
            <param name="mode"> The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.Template">
            <summary> The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.TemplateLink">
            <summary> The URI of the template. Use either the templateLink property or the template property, but not both. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.Parameters">
            <summary> Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.ParametersLink">
            <summary> The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.Mode">
            <summary> The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.DebugSetting">
            <summary> The debug setting of the deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.DebugSettingDetailLevel">
            <summary> Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.ErrorDeployment">
            <summary> The deployment on error behavior. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.ExpressionEvaluation">
            <summary> Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentProperties.ExpressionEvaluationScope">
            <summary> The scope to be used for evaluation of parameters, variables and functions in a nested template. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptListResult">
            <summary> List of deployment scripts. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptListResult.#ctor">
            <summary> Initializes a new instance of ArmDeploymentScriptListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ArmDeploymentScriptData},System.String)">
            <summary> Initializes a new instance of ArmDeploymentScriptListResult. </summary>
            <param name="value">
            An array of deployment scripts.
            Please note <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptData" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Resources.Models.AzureCliScript" /> and <see cref="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript" />.
            </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptListResult.Value">
            <summary>
            An array of deployment scripts.
            Please note <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptData" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Resources.Models.AzureCliScript" /> and <see cref="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity">
            <summary> Managed identity generic object. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity.#ctor">
            <summary> Initializes a new instance of ArmDeploymentScriptManagedIdentity. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity.#ctor(System.Nullable{Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType},System.Nullable{System.Guid},System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.Models.UserAssignedIdentity})">
            <summary> Initializes a new instance of ArmDeploymentScriptManagedIdentity. </summary>
            <param name="identityType"> Type of the managed identity. </param>
            <param name="tenantId"> ID of the Azure Active Directory. </param>
            <param name="userAssignedIdentities"> The list of user-assigned managed identities associated with the resource. Key is the Azure resource Id of the managed identity. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity.IdentityType">
            <summary> Type of the managed identity. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity.TenantId">
            <summary> ID of the Azure Active Directory. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity.UserAssignedIdentities">
            <summary> The list of user-assigned managed identities associated with the resource. Key is the Azure resource Id of the managed identity. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType">
            <summary> Type of the managed identity. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.UserAssigned">
            <summary> UserAssigned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.op_Equality(Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.op_Inequality(Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.Equals(Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentityType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch">
            <summary> Deployment script parameters to be updated. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch.#ctor">
            <summary> Initializes a new instance of ArmDeploymentScriptPatch. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary> Initializes a new instance of ArmDeploymentScriptPatch. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> Resource tags to be updated. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch.Tags">
            <summary> Resource tags to be updated. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink">
            <summary> Entity representing the reference to the template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.#ctor">
            <summary> Initializes a new instance of ArmDeploymentTemplateLink. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.#ctor(System.Uri,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of ArmDeploymentTemplateLink. </summary>
            <param name="uri"> The URI of the template to deploy. Use either the uri or id property, but not both. </param>
            <param name="id"> The resource id of a Template Spec. Use either the id or uri property, but not both. </param>
            <param name="relativePath"> The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs. </param>
            <param name="contentVersion"> If included, must match the ContentVersion in the template. </param>
            <param name="queryString"> The query string (for example, a SAS token) to be used with the templateLink URI. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.Uri">
            <summary> The URI of the template to deploy. Use either the uri or id property, but not both. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.Id">
            <summary> The resource id of a Template Spec. Use either the id or uri property, but not both. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.RelativePath">
            <summary> The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.ContentVersion">
            <summary> If included, must match the ContentVersion in the template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentTemplateLink.QueryString">
            <summary> The query string (for example, a SAS token) to be used with the templateLink URI. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentValidateResult">
            <summary> Information from validate template deployment response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentValidateResult.#ctor">
            <summary> Initializes a new instance of ArmDeploymentValidateResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentValidateResult.#ctor(Azure.ResponseError,Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended)">
            <summary> Initializes a new instance of ArmDeploymentValidateResult. </summary>
            <param name="error"> The deployment validation error. </param>
            <param name="properties"> The template deployment properties. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentValidateResult.Error">
            <summary> The deployment validation error. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentValidateResult.Properties">
            <summary> The template deployment properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent">
            <summary> Deployment What-if operation parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent.#ctor(Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfProperties)">
            <summary> Initializes a new instance of ArmDeploymentWhatIfContent. </summary>
            <param name="properties"> The deployment properties. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="properties" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent.Location">
            <summary> The location to store the deployment data, only required at the tenant and management group scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent.Properties">
            <summary> The deployment properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfProperties">
            <summary> Deployment What-if properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfProperties.#ctor(Azure.ResourceManager.Resources.Models.ArmDeploymentMode)">
            <summary> Initializes a new instance of ArmDeploymentWhatIfProperties. </summary>
            <param name="mode"> The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfProperties.WhatIfSettings">
            <summary> Optional What-If operation settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfProperties.WhatIfResultFormat">
            <summary> The format of the What-If results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfSettings">
            <summary> Deployment What-If operation settings. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfSettings.#ctor">
            <summary> Initializes a new instance of ArmDeploymentWhatIfSettings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfSettings.ResultFormat">
            <summary> The format of the What-If results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.AzureCliScript">
            <summary> Object model for the Azure CLI script. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.AzureCliScript.#ctor(Azure.Core.AzureLocation,System.TimeSpan,System.String)">
            <summary> Initializes a new instance of AzureCliScript. </summary>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
            <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
            <param name="azCliVersion"> Azure CLI module version to be used. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="azCliVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.AzureCliScript.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity,Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Resources.Models.ScriptType,Azure.ResourceManager.Resources.Models.ContainerConfiguration,Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration,System.Nullable{Azure.ResourceManager.Resources.Models.ScriptCleanupOptions},System.Nullable{Azure.ResourceManager.Resources.Models.ScriptProvisioningState},Azure.ResourceManager.Resources.Models.ScriptStatus,System.BinaryData,System.Uri,System.Collections.Generic.IList{System.Uri},System.String,System.String,System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable},System.String,System.TimeSpan,System.Nullable{System.TimeSpan},System.String)">
            <summary> Initializes a new instance of AzureCliScript. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="identity"> Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported. </param>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
            <param name="tags"> Resource tags. </param>
            <param name="kind"> Type of the script. </param>
            <param name="containerSettings"> Container settings. </param>
            <param name="storageAccountSettings"> Storage Account settings. </param>
            <param name="cleanupPreference"> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </param>
            <param name="provisioningState"> State of the script execution. This only appears in the response. </param>
            <param name="status"> Contains the results of script execution. </param>
            <param name="outputs"> List of script outputs. </param>
            <param name="primaryScriptUri"> Uri for the script. This is the entry point for the external script. </param>
            <param name="supportingScriptUris"> Supporting files for the external script. </param>
            <param name="scriptContent"> Script body. </param>
            <param name="arguments"> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </param>
            <param name="environmentVariables"> The environment variables to pass over to the script. </param>
            <param name="forceUpdateTag"> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </param>
            <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
            <param name="timeout"> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </param>
            <param name="azCliVersion"> Azure CLI module version to be used. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ContainerSettings">
            <summary> Container settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ContainerGroupName">
            <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.StorageAccountSettings">
            <summary> Storage Account settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.CleanupPreference">
            <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ProvisioningState">
            <summary> State of the script execution. This only appears in the response. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Status">
            <summary> Contains the results of script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Outputs">
            <summary> List of script outputs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.PrimaryScriptUri">
            <summary> Uri for the script. This is the entry point for the external script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.SupportingScriptUris">
            <summary> Supporting files for the external script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ScriptContent">
            <summary> Script body. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Arguments">
            <summary> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.EnvironmentVariables">
            <summary> The environment variables to pass over to the script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ForceUpdateTag">
            <summary> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.RetentionInterval">
            <summary> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Timeout">
            <summary> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzureCliScript.AzCliVersion">
            <summary> Azure CLI module version to be used. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript">
            <summary> Object model for the Azure PowerShell script. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.#ctor(Azure.Core.AzureLocation,System.TimeSpan,System.String)">
            <summary> Initializes a new instance of AzurePowerShellScript. </summary>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
            <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
            <param name="azPowerShellVersion"> Azure PowerShell module version to be used. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="azPowerShellVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptManagedIdentity,Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Resources.Models.ScriptType,Azure.ResourceManager.Resources.Models.ContainerConfiguration,Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration,System.Nullable{Azure.ResourceManager.Resources.Models.ScriptCleanupOptions},System.Nullable{Azure.ResourceManager.Resources.Models.ScriptProvisioningState},Azure.ResourceManager.Resources.Models.ScriptStatus,System.BinaryData,System.Uri,System.Collections.Generic.IList{System.Uri},System.String,System.String,System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable},System.String,System.TimeSpan,System.Nullable{System.TimeSpan},System.String)">
            <summary> Initializes a new instance of AzurePowerShellScript. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="identity"> Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported. </param>
            <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
            <param name="tags"> Resource tags. </param>
            <param name="kind"> Type of the script. </param>
            <param name="containerSettings"> Container settings. </param>
            <param name="storageAccountSettings"> Storage Account settings. </param>
            <param name="cleanupPreference"> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </param>
            <param name="provisioningState"> State of the script execution. This only appears in the response. </param>
            <param name="status"> Contains the results of script execution. </param>
            <param name="outputs"> List of script outputs. </param>
            <param name="primaryScriptUri"> Uri for the script. This is the entry point for the external script. </param>
            <param name="supportingScriptUris"> Supporting files for the external script. </param>
            <param name="scriptContent"> Script body. </param>
            <param name="arguments"> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </param>
            <param name="environmentVariables"> The environment variables to pass over to the script. </param>
            <param name="forceUpdateTag"> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </param>
            <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
            <param name="timeout"> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </param>
            <param name="azPowerShellVersion"> Azure PowerShell module version to be used. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ContainerSettings">
            <summary> Container settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ContainerGroupName">
            <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.StorageAccountSettings">
            <summary> Storage Account settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.CleanupPreference">
            <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ProvisioningState">
            <summary> State of the script execution. This only appears in the response. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Status">
            <summary> Contains the results of script execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Outputs">
            <summary> List of script outputs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.PrimaryScriptUri">
            <summary> Uri for the script. This is the entry point for the external script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.SupportingScriptUris">
            <summary> Supporting files for the external script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ScriptContent">
            <summary> Script body. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Arguments">
            <summary> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.EnvironmentVariables">
            <summary> The environment variables to pass over to the script. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ForceUpdateTag">
            <summary> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.RetentionInterval">
            <summary> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Timeout">
            <summary> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.AzPowerShellVersion">
            <summary> Azure PowerShell module version to be used. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.BasicArmDependency">
            <summary> Deployment dependency information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.BasicArmDependency.#ctor">
            <summary> Initializes a new instance of BasicArmDependency. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.BasicArmDependency.#ctor(System.String,System.Nullable{Azure.Core.ResourceType},System.String)">
            <summary> Initializes a new instance of BasicArmDependency. </summary>
            <param name="id"> The ID of the dependency. </param>
            <param name="resourceType"> The dependency resource type. </param>
            <param name="resourceName"> The dependency resource name. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.BasicArmDependency.Id">
            <summary> The ID of the dependency. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.BasicArmDependency.ResourceType">
            <summary> The dependency resource type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.BasicArmDependency.ResourceName">
            <summary> The dependency resource name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ContainerConfiguration">
            <summary> Settings to customize ACI container instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ContainerConfiguration.#ctor">
            <summary> Initializes a new instance of ContainerConfiguration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ContainerConfiguration.#ctor(System.String)">
            <summary> Initializes a new instance of ContainerConfiguration. </summary>
            <param name="containerGroupName"> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ContainerConfiguration.ContainerGroupName">
            <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.DebugSetting">
            <summary> The debug setting. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.DebugSetting.#ctor">
            <summary> Initializes a new instance of DebugSetting. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.DebugSetting.#ctor(System.String)">
            <summary> Initializes a new instance of DebugSetting. </summary>
            <param name="detailLevel"> Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.DebugSetting.DetailLevel">
            <summary> Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ErrorDeployment">
            <summary> Deployment on error behavior. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ErrorDeployment.#ctor">
            <summary> Initializes a new instance of ErrorDeployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ErrorDeployment.DeploymentType">
            <summary> The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ErrorDeployment.DeploymentName">
            <summary> The deployment to be used on error case. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended">
            <summary> Deployment on error behavior with additional details. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended.#ctor">
            <summary> Initializes a new instance of ErrorDeploymentExtended. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended.#ctor(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.ErrorDeploymentType},System.String)">
            <summary> Initializes a new instance of ErrorDeploymentExtended. </summary>
            <param name="provisioningState"> The state of the provisioning for the on error deployment. </param>
            <param name="deploymentType"> The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. </param>
            <param name="deploymentName"> The deployment to be used on error case. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended.ProvisioningState">
            <summary> The state of the provisioning for the on error deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended.DeploymentType">
            <summary> The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ErrorDeploymentExtended.DeploymentName">
            <summary> The deployment to be used on error case. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ErrorDeploymentType">
            <summary> The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ErrorDeploymentType.LastSuccessful">
            <summary> LastSuccessful. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ErrorDeploymentType.SpecificDeployment">
            <summary> SpecificDeployment. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationOptions">
            <summary> Specifies whether template expressions are evaluated within the scope of the parent template or nested template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationOptions.#ctor">
            <summary> Initializes a new instance of ExpressionEvaluationOptions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ExpressionEvaluationOptions.Scope">
            <summary> The scope to be used for evaluation of parameters, variables and functions in a nested template. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope">
            <summary> The scope to be used for evaluation of parameters, variables and functions in a nested template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.Outer">
            <summary> Outer. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.Inner">
            <summary> Inner. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.op_Equality(Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope,Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.op_Inequality(Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope,Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.Equals(Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ExpressionEvaluationScope.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.HttpMessage">
            <summary> HTTP message. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.HttpMessage.#ctor">
            <summary> Initializes a new instance of HttpMessage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.HttpMessage.#ctor(System.BinaryData)">
            <summary> Initializes a new instance of HttpMessage. </summary>
            <param name="content"> HTTP message content. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.HttpMessage.Content">
            <summary> HTTP message content. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitApprovalMode">
            <summary> The Jit approval mode. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.JitApprovalMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprovalMode.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprovalMode.AutoApprove">
            <summary> AutoApprove. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprovalMode.ManualApprove">
            <summary> ManualApprove. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.op_Equality(Azure.ResourceManager.Resources.Models.JitApprovalMode,Azure.ResourceManager.Resources.Models.JitApprovalMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitApprovalMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.op_Inequality(Azure.ResourceManager.Resources.Models.JitApprovalMode,Azure.ResourceManager.Resources.Models.JitApprovalMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitApprovalMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.JitApprovalMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.JitApprovalMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.Equals(Azure.ResourceManager.Resources.Models.JitApprovalMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprovalMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitApprover">
            <summary> JIT approver definition. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprover.#ctor(System.String)">
            <summary> Initializes a new instance of JitApprover. </summary>
            <param name="id"> The approver service principal Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApprover.#ctor(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.JitApproverType},System.String)">
            <summary> Initializes a new instance of JitApprover. </summary>
            <param name="id"> The approver service principal Id. </param>
            <param name="approverType"> The approver type. </param>
            <param name="displayName"> The approver display name. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprover.Id">
            <summary> The approver service principal Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprover.ApproverType">
            <summary> The approver type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApprover.DisplayName">
            <summary> The approver display name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitApproverType">
            <summary> The approver type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.JitApproverType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApproverType.User">
            <summary> user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitApproverType.Group">
            <summary> group. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.op_Equality(Azure.ResourceManager.Resources.Models.JitApproverType,Azure.ResourceManager.Resources.Models.JitApproverType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitApproverType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.op_Inequality(Azure.ResourceManager.Resources.Models.JitApproverType,Azure.ResourceManager.Resources.Models.JitApproverType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitApproverType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.JitApproverType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.JitApproverType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.Equals(Azure.ResourceManager.Resources.Models.JitApproverType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitApproverType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitAuthorizationPolicies">
            <summary> The JIT authorization policies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitAuthorizationPolicies.#ctor(System.Guid,System.String)">
            <summary> Initializes a new instance of JitAuthorizationPolicies. </summary>
            <param name="principalId"> The the principal id that will be granted JIT access. </param>
            <param name="roleDefinitionId"> The role definition id that will be granted to the Principal. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitAuthorizationPolicies.PrincipalId">
            <summary> The the principal id that will be granted JIT access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitAuthorizationPolicies.RoleDefinitionId">
            <summary> The role definition id that will be granted to the Principal. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitRequestListResult">
            <summary> List of JIT requests. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestListResult.#ctor">
            <summary> Initializes a new instance of JitRequestListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.JitRequestData},System.String)">
            <summary> Initializes a new instance of JitRequestListResult. </summary>
            <param name="value"> The array of Jit request definition. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestListResult.Value">
            <summary> The array of Jit request definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitRequestPatch">
            <summary> Information about JIT request. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestPatch.#ctor">
            <summary> Initializes a new instance of JitRequestPatch. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestPatch.Tags">
            <summary> Jit request tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitRequestState">
            <summary> The JIT request state. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.JitRequestState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Pending">
            <summary> Pending. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Approved">
            <summary> Approved. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Denied">
            <summary> Denied. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Canceled">
            <summary> Canceled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Expired">
            <summary> Expired. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitRequestState.Timeout">
            <summary> Timeout. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.op_Equality(Azure.ResourceManager.Resources.Models.JitRequestState,Azure.ResourceManager.Resources.Models.JitRequestState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitRequestState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.op_Inequality(Azure.ResourceManager.Resources.Models.JitRequestState,Azure.ResourceManager.Resources.Models.JitRequestState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitRequestState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.JitRequestState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.JitRequestState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.Equals(Azure.ResourceManager.Resources.Models.JitRequestState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitRequestState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitSchedulingPolicy">
            <summary> The JIT scheduling policies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingPolicy.#ctor(Azure.ResourceManager.Resources.Models.JitSchedulingType,System.TimeSpan,System.DateTimeOffset)">
            <summary> Initializes a new instance of JitSchedulingPolicy. </summary>
            <param name="schedulingType"> The type of JIT schedule. </param>
            <param name="duration"> The required duration of the JIT request. </param>
            <param name="startOn"> The start time of the request. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingPolicy.SchedulingType">
            <summary> The type of JIT schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingPolicy.Duration">
            <summary> The required duration of the JIT request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingPolicy.StartOn">
            <summary> The start time of the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.JitSchedulingType">
            <summary> The JIT request scheduling type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.JitSchedulingType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingType.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingType.Once">
            <summary> Once. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.JitSchedulingType.Recurring">
            <summary> Recurring. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.op_Equality(Azure.ResourceManager.Resources.Models.JitSchedulingType,Azure.ResourceManager.Resources.Models.JitSchedulingType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitSchedulingType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.op_Inequality(Azure.ResourceManager.Resources.Models.JitSchedulingType,Azure.ResourceManager.Resources.Models.JitSchedulingType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.JitSchedulingType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.JitSchedulingType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.JitSchedulingType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.Equals(Azure.ResourceManager.Resources.Models.JitSchedulingType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.JitSchedulingType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.LinkedTemplateArtifact">
            <summary> Represents a Template Spec artifact containing an embedded Azure Resource Manager template for use as a linked template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.LinkedTemplateArtifact.#ctor(System.String,System.BinaryData)">
            <summary> Initializes a new instance of LinkedTemplateArtifact. </summary>
            <param name="path"> A filesystem safe relative path of the artifact. </param>
            <param name="template"> The Azure Resource Manager template. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="path" /> or <paramref name="template" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.LinkedTemplateArtifact.Path">
            <summary> A filesystem safe relative path of the artifact. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.LinkedTemplateArtifact.Template">
            <summary> The Azure Resource Manager template. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind">
            <summary> The name of the current provisioning operation. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.NotSpecified">
            <summary> The provisioning operation is not specified. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.Create">
            <summary> The provisioning operation is create. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.Delete">
            <summary> The provisioning operation is delete. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.Waiting">
            <summary> The provisioning operation is waiting. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.AzureAsyncOperationWaiting">
            <summary> The provisioning operation is waiting Azure async operation. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.ResourceCacheWaiting">
            <summary> The provisioning operation is waiting for resource cache. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.Action">
            <summary> The provisioning operation is action. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.Read">
            <summary> The provisioning operation is read. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.EvaluateDeploymentOutput">
            <summary> The provisioning operation is evaluate output. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.ProvisioningOperationKind.DeploymentCleanup">
            <summary> The provisioning operation is cleanup. This operation is part of the 'complete' mode deployment. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState">
            <summary> Provisioning status of the managed application. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.NotSpecified">
            <summary> NotSpecified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Accepted">
            <summary> Accepted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Running">
            <summary> Running. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Ready">
            <summary> Ready. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Creating">
            <summary> Creating. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Created">
            <summary> Created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Deleting">
            <summary> Deleting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Deleted">
            <summary> Deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Canceled">
            <summary> Canceled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Updating">
            <summary> Updating. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.op_Equality(Azure.ResourceManager.Resources.Models.ResourcesProvisioningState,Azure.ResourceManager.Resources.Models.ResourcesProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.op_Inequality(Azure.ResourceManager.Resources.Models.ResourcesProvisioningState,Azure.ResourceManager.Resources.Models.ResourcesProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ResourcesProvisioningState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.Equals(Azure.ResourceManager.Resources.Models.ResourcesProvisioningState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ResourcesProvisioningState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions">
            <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.Always">
            <summary> Always. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.OnSuccess">
            <summary> OnSuccess. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.OnExpiration">
            <summary> OnExpiration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.op_Equality(Azure.ResourceManager.Resources.Models.ScriptCleanupOptions,Azure.ResourceManager.Resources.Models.ScriptCleanupOptions)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.op_Inequality(Azure.ResourceManager.Resources.Models.ScriptCleanupOptions,Azure.ResourceManager.Resources.Models.ScriptCleanupOptions)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ScriptCleanupOptions">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.Equals(Azure.ResourceManager.Resources.Models.ScriptCleanupOptions)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptCleanupOptions.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable">
            <summary> The environment variable to pass to the script in the container instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable.#ctor(System.String)">
            <summary> Initializes a new instance of ScriptEnvironmentVariable. </summary>
            <param name="name"> The name of the environment variable. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of ScriptEnvironmentVariable. </summary>
            <param name="name"> The name of the environment variable. </param>
            <param name="value"> The value of the environment variable. </param>
            <param name="secureValue"> The value of the secure environment variable. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable.Name">
            <summary> The name of the environment variable. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable.Value">
            <summary> The value of the environment variable. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable.SecureValue">
            <summary> The value of the secure environment variable. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptLogsList">
            <summary> Deployment script execution logs. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptLogsList.#ctor">
            <summary> Initializes a new instance of ScriptLogsList. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptLogsList.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.ScriptLogData})">
            <summary> Initializes a new instance of ScriptLogsList. </summary>
            <param name="value"> Deployment scripts logs. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptLogsList.Value">
            <summary> Deployment scripts logs. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptProvisioningState">
            <summary> State of the script execution. This only appears in the response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ScriptProvisioningState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Creating">
            <summary> Creating. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.ProvisioningResources">
            <summary> ProvisioningResources. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Running">
            <summary> Running. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Canceled">
            <summary> Canceled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.op_Equality(Azure.ResourceManager.Resources.Models.ScriptProvisioningState,Azure.ResourceManager.Resources.Models.ScriptProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptProvisioningState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.op_Inequality(Azure.ResourceManager.Resources.Models.ScriptProvisioningState,Azure.ResourceManager.Resources.Models.ScriptProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptProvisioningState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ScriptProvisioningState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ScriptProvisioningState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.Equals(Azure.ResourceManager.Resources.Models.ScriptProvisioningState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptProvisioningState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration">
            <summary> Settings to use an existing storage account. Valid storage account kinds are: Storage, StorageV2 and FileStorage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration.#ctor">
            <summary> Initializes a new instance of ScriptStorageConfiguration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of ScriptStorageConfiguration. </summary>
            <param name="storageAccountName"> The storage account name. </param>
            <param name="storageAccountKey"> The storage account access key. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration.StorageAccountName">
            <summary> The storage account name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration.StorageAccountKey">
            <summary> The storage account access key. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.ScriptType">
            <summary> Type of the script. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.ScriptType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptType.AzurePowerShell">
            <summary> AzurePowerShell. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.ScriptType.AzureCLI">
            <summary> AzureCLI. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.op_Equality(Azure.ResourceManager.Resources.Models.ScriptType,Azure.ResourceManager.Resources.Models.ScriptType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.op_Inequality(Azure.ResourceManager.Resources.Models.ScriptType,Azure.ResourceManager.Resources.Models.ScriptType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.ScriptType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.ScriptType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.ScriptType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.Equals(Azure.ResourceManager.Resources.Models.ScriptType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.ScriptType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.StatusMessage">
            <summary> Operation status message object. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.StatusMessage.#ctor">
            <summary> Initializes a new instance of StatusMessage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.StatusMessage.#ctor(System.String,Azure.ResponseError)">
            <summary> Initializes a new instance of StatusMessage. </summary>
            <param name="status"> Status of the deployment operation. </param>
            <param name="error"> The error reported by the operation. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.StatusMessage.Status">
            <summary> Status of the deployment operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.StatusMessage.Error">
            <summary> The error reported by the operation. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TargetResource">
            <summary> Target resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TargetResource.#ctor">
            <summary> Initializes a new instance of TargetResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TargetResource.#ctor(System.String,System.String,System.Nullable{Azure.Core.ResourceType})">
            <summary> Initializes a new instance of TargetResource. </summary>
            <param name="id"> The ID of the resource. </param>
            <param name="resourceName"> The name of the resource. </param>
            <param name="resourceType"> The type of the resource. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TargetResource.Id">
            <summary> The ID of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TargetResource.ResourceName">
            <summary> The name of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TargetResource.ResourceType">
            <summary> The type of the resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateHashResult">
            <summary> Result of the request to calculate template hash. It contains a string of minified template and its hash. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateHashResult.#ctor">
            <summary> Initializes a new instance of TemplateHashResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateHashResult.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of TemplateHashResult. </summary>
            <param name="minifiedTemplate"> The minified template string. </param>
            <param name="templateHash"> The template hash. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateHashResult.MinifiedTemplate">
            <summary> The minified template string. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateHashResult.TemplateHash">
            <summary> The template hash. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind">
            <summary> The TemplateSpecExpandKind. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.Versions">
            <summary> Includes version information with the Template Spec. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.op_Equality(Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind,Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.op_Inequality(Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind,Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.op_Implicit(System.String)~Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.Equals(Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecPatch">
            <summary> Template Spec properties to be updated (only tags are currently supported). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecPatch.#ctor">
            <summary> Initializes a new instance of TemplateSpecPatch. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecPatch.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary> Initializes a new instance of TemplateSpecPatch. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> Resource tags. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecsListResult">
            <summary> List of Template Specs. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecsListResult.#ctor">
            <summary> Initializes a new instance of TemplateSpecsListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecsListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.TemplateSpecData},System.String)">
            <summary> Initializes a new instance of TemplateSpecsListResult. </summary>
            <param name="value"> An array of Template Specs. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecsListResult.Value">
            <summary> An array of Template Specs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecsListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo">
            <summary> High-level information about a Template Spec version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo.#ctor">
            <summary> Initializes a new instance of TemplateSpecVersionInfo. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo.#ctor(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of TemplateSpecVersionInfo. </summary>
            <param name="description"> Template Spec version description. </param>
            <param name="timeCreated"> The timestamp of when the version was created. </param>
            <param name="timeModified"> The timestamp of when the version was last modified. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo.Description">
            <summary> Template Spec version description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo.TimeCreated">
            <summary> The timestamp of when the version was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo.TimeModified">
            <summary> The timestamp of when the version was last modified. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch">
            <summary> Template Spec Version properties to be updated (only tags are currently supported). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch.#ctor">
            <summary> Initializes a new instance of TemplateSpecVersionPatch. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary> Initializes a new instance of TemplateSpecVersionPatch. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> Resource tags. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.TemplateSpecVersionsListResult">
            <summary> List of Template Specs versions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionsListResult.#ctor">
            <summary> Initializes a new instance of TemplateSpecVersionsListResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.TemplateSpecVersionsListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.TemplateSpecVersionData},System.String)">
            <summary> Initializes a new instance of TemplateSpecVersionsListResult. </summary>
            <param name="value"> An array of Template Spec versions. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionsListResult.Value">
            <summary> An array of Template Spec versions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.TemplateSpecVersionsListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfChange">
            <summary> Information about a single resource change predicted by What-If operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfChange.#ctor(System.String,Azure.ResourceManager.Resources.Models.WhatIfChangeType)">
            <summary> Initializes a new instance of WhatIfChange. </summary>
            <param name="resourceId"> Resource ID. </param>
            <param name="changeType"> Type of change that will be made to the resource when the deployment is executed. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfChange.#ctor(System.String,Azure.ResourceManager.Resources.Models.WhatIfChangeType,System.String,System.BinaryData,System.BinaryData,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.WhatIfPropertyChange})">
            <summary> Initializes a new instance of WhatIfChange. </summary>
            <param name="resourceId"> Resource ID. </param>
            <param name="changeType"> Type of change that will be made to the resource when the deployment is executed. </param>
            <param name="unsupportedReason"> The explanation about why the resource is unsupported by What-If. </param>
            <param name="before"> The snapshot of the resource before the deployment is executed. </param>
            <param name="after"> The predicted snapshot of the resource after the deployment is executed. </param>
            <param name="delta"> The predicted changes to resource properties. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.ResourceId">
            <summary> Resource ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.ChangeType">
            <summary> Type of change that will be made to the resource when the deployment is executed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.UnsupportedReason">
            <summary> The explanation about why the resource is unsupported by What-If. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.Before">
            <summary> The snapshot of the resource before the deployment is executed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.After">
            <summary> The predicted snapshot of the resource after the deployment is executed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfChange.Delta">
            <summary> The predicted changes to resource properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfChangeType">
            <summary> Type of change that will be made to the resource when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Create">
            <summary> The resource does not exist in the current state but is present in the desired state. The resource will be created when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Delete">
            <summary> The resource exists in the current state and is missing from the desired state. The resource will be deleted when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Ignore">
            <summary> The resource exists in the current state and is missing from the desired state. The resource will not be deployed or modified when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Deploy">
            <summary> The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource may or may not change. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.NoChange">
            <summary> The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will not change. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Modify">
            <summary> The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will change. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfChangeType.Unsupported">
            <summary> The resource is not supported by What-If. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfOperationResult">
            <summary> Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfOperationResult.#ctor">
            <summary> Initializes a new instance of WhatIfOperationResult. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfOperationResult.#ctor(System.String,Azure.ResponseError,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.WhatIfChange})">
            <summary> Initializes a new instance of WhatIfOperationResult. </summary>
            <param name="status"> Status of the What-If operation. </param>
            <param name="error"> Error when What-If operation fails. </param>
            <param name="changes"> List of resource changes predicted by What-If operation. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfOperationResult.Status">
            <summary> Status of the What-If operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfOperationResult.Error">
            <summary> Error when What-If operation fails. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfOperationResult.Changes">
            <summary> List of resource changes predicted by What-If operation. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange">
            <summary> The predicted change to the resource property. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.#ctor(System.String,Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType)">
            <summary> Initializes a new instance of WhatIfPropertyChange. </summary>
            <param name="path"> The path of the property. </param>
            <param name="propertyChangeType"> The type of property change. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="path" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.#ctor(System.String,Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType,System.BinaryData,System.BinaryData,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Resources.Models.WhatIfPropertyChange})">
            <summary> Initializes a new instance of WhatIfPropertyChange. </summary>
            <param name="path"> The path of the property. </param>
            <param name="propertyChangeType"> The type of property change. </param>
            <param name="before"> The value of the property before the deployment is executed. </param>
            <param name="after"> The value of the property after the deployment is executed. </param>
            <param name="children"> Nested property changes. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.Path">
            <summary> The path of the property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.PropertyChangeType">
            <summary> The type of property change. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.Before">
            <summary> The value of the property before the deployment is executed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.After">
            <summary> The value of the property after the deployment is executed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.Models.WhatIfPropertyChange.Children">
            <summary> Nested property changes. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType">
            <summary> The type of property change. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType.Create">
            <summary> The property does not exist in the current state but is present in the desired state. The property will be created when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType.Delete">
            <summary> The property exists in the current state and is missing from the desired state. It will be deleted when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType.Modify">
            <summary> The property exists in both current and desired state and is different. The value of the property will change when the deployment is executed. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType.Array">
            <summary> The property is an array and contains nested changes. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfPropertyChangeType.NoEffect">
            <summary> The property will not be set or updated. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.Models.WhatIfResultFormat">
            <summary> The format of the What-If results. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfResultFormat.ResourceIdOnly">
            <summary> ResourceIdOnly. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Resources.Models.WhatIfResultFormat.FullResourcePayloads">
            <summary> FullResourcePayloads. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecData">
            <summary> A class representing the TemplateSpec data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of TemplateSpecData. </summary>
            <param name="location"> The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.BinaryData,System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.ResourceManager.Resources.Models.TemplateSpecVersionInfo})">
            <summary> Initializes a new instance of TemplateSpecData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="location"> The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations. </param>
            <param name="tags"> Resource tags. </param>
            <param name="description"> Template Spec description. </param>
            <param name="displayName"> Template Spec display name. </param>
            <param name="metadata"> The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. </param>
            <param name="versions"> High-level information about the versions within this Template Spec. The keys are the version names. Only populated if the $expand query parameter is set to 'versions'. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.Location">
            <summary> The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.Description">
            <summary> Template Spec description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.DisplayName">
            <summary> Template Spec display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.Metadata">
            <summary> The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecData.Versions">
            <summary> High-level information about the versions within this Template Spec. The keys are the version names. Only populated if the $expand query parameter is set to 'versions'. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecVersionData">
            <summary> A class representing the TemplateSpecVersion data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of TemplateSpecVersionData. </summary>
            <param name="location"> The location of the Template Spec Version. It must match the location of the parent Template Spec. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.LinkedTemplateArtifact},System.BinaryData,System.BinaryData,System.BinaryData)">
            <summary> Initializes a new instance of TemplateSpecVersionData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="location"> The location of the Template Spec Version. It must match the location of the parent Template Spec. </param>
            <param name="tags"> Resource tags. </param>
            <param name="description"> Template Spec version description. </param>
            <param name="linkedTemplates"> An array of linked template artifacts. </param>
            <param name="metadata"> The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. </param>
            <param name="mainTemplate"> The main Azure Resource Manager template content. </param>
            <param name="uiFormDefinition"> The Azure Resource Manager template UI definition content. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.Location">
            <summary> The location of the Template Spec Version. It must match the location of the parent Template Spec. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.Description">
            <summary> Template Spec version description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.LinkedTemplates">
            <summary> An array of linked template artifacts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.Metadata">
            <summary> The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.MainTemplate">
            <summary> The main Azure Resource Manager template content. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionData.UiFormDefinition">
            <summary> The Azure Resource Manager template UI definition content. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationCollection" /> instance call the GetArmApplications method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmApplicationData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="data"> Parameters supplied to the create or update a managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmApplicationData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="data"> Parameters supplied to the create or update a managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection" /> instance call the GetArmApplicationDefinitions method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the managed application definitions in a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions
            Operation Id: ApplicationDefinitions_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Lists the managed application definitions in a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions
            Operation Id: ApplicationDefinitions_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource">
            <summary>
            A Class representing an ArmApplicationDefinition along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetArmApplicationDefinitionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetArmApplicationDefinition method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.ArmApplicationDefinitionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.Update(Azure.WaitUntil,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates a new managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmApplicationResource">
            <summary>
            A Class representing an ArmApplication along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetArmApplicationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetArmApplication method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.ArmApplicationData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.ArmApplicationResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmApplicationResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.UpdateAsync(Azure.ResourceManager.Resources.Models.ArmApplicationPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing managed application. The only value that can be updated via PATCH currently is the tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Update
            </summary>
            <param name="patch"> Parameters supplied to update an existing managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.Update(Azure.ResourceManager.Resources.Models.ArmApplicationPatch,System.Threading.CancellationToken)">
            <summary>
            Updates an existing managed application. The only value that can be updated via PATCH currently is the tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Update
            </summary>
            <param name="patch"> Parameters supplied to update an existing managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.RefreshPermissionsAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Refresh Permissions for application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/refreshPermissions
            Operation Id: Applications_RefreshPermissions
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.RefreshPermissions(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Refresh Permissions for application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/refreshPermissions
            Operation Id: Applications_RefreshPermissions
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentCollection" /> instance call the GetArmDeployments method from an instance of <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            You can provide the template and parameters directly in the request or link to JSON files.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CreateOrUpdateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            You can provide the template and parameters directly in the request or link to JSON files.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CreateOrUpdateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.GetAllAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments
            Operation Id: Deployments_ListAtScope
            </summary>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.GetAll(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments
            Operation Id: Deployments_ListAtScope
            </summary>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentData">
            <summary> A class representing the ArmDeployment data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentData.#ctor">
            <summary> Initializes a new instance of ArmDeploymentData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.Resources.Models.ArmDeploymentPropertiesExtended,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary> Initializes a new instance of ArmDeploymentData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="location"> the location of the deployment. </param>
            <param name="properties"> Deployment properties. </param>
            <param name="tags"> Deployment tags. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentData.Location">
            <summary> the location of the deployment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentData.Properties">
            <summary> Deployment properties. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentData.Tags">
            <summary> Deployment tags. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentResource">
            <summary>
            A Class representing an ArmDeployment along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetArmDeploymentResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> using the GetArmDeployment method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.ArmDeploymentData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.ArmDeploymentResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_DeleteAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_DeleteAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            You can provide the template and parameters directly in the request or link to JSON files.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CreateOrUpdateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.Update(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            You can provide the template and parameters directly in the request or link to JSON files.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CreateOrUpdateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CancelAsync(System.Threading.CancellationToken)">
            <summary>
            You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel
            Operation Id: Deployments_CancelAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.Cancel(System.Threading.CancellationToken)">
            <summary>
            You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel
            Operation Id: Deployments_CancelAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.ValidateAsync(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate
            Operation Id: Deployments_ValidateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.Validate(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate
            Operation Id: Deployments_ValidateAtScope
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.ExportTemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate
            Operation Id: Deployments_ExportTemplateAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.ExportTemplate(System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate
            Operation Id: Deployments_ExportTemplateAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.WhatIfAsync(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the scope of the tenant group.
            Request Path: /providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtTenantScope
            Request Path: /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtManagementGroupScope
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtSubscriptionScope
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIf
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.WhatIf(Azure.WaitUntil,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the scope of the tenant group.
            Request Path: /providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtTenantScope
            Request Path: /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtManagementGroupScope
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIfAtSubscriptionScope
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf
            Operation Id: Deployments_WhatIf
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.GetDeploymentOperationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}
            Operation Id: DeploymentOperations_GetAtScope
            </summary>
            <param name="operationId"> The ID of the operation to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="operationId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.GetDeploymentOperation(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}
            Operation Id: DeploymentOperations_GetAtScope
            </summary>
            <param name="operationId"> The ID of the operation to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="operationId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.GetDeploymentOperationsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations
            Operation Id: DeploymentOperations_ListAtScope
            </summary>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.GetDeploymentOperations(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations
            Operation Id: DeploymentOperations_ListAtScope
            </summary>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.Models.ArmDeploymentOperation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CheckExistenceAsync(System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CheckExistenceAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CheckExistence(System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_CheckExistenceAtScope
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection" /> instance call the GetArmDeploymentScripts method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmDeploymentScriptData,System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Create
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="data"> Deployment script supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.ArmDeploymentScriptData,System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Create
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="data"> Deployment script supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource">
            <summary>
            A Class representing an ArmDeploymentScript along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetArmDeploymentScriptResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetArmDeploymentScript method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.ArmDeploymentScriptData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.GetScriptLog">
            <summary> Gets an object representing a ScriptLogResource along with the instance operations that can be performed on it in the ArmDeploymentScript. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment script. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment script. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.UpdateAsync(Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch,System.Threading.CancellationToken)">
            <summary>
            Updates deployment script tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Update
            </summary>
            <param name="patch"> Deployment script resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.Update(Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch,System.Threading.CancellationToken)">
            <summary>
            Updates deployment script tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Update
            </summary>
            <param name="patch"> Deployment script resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.GetLogsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs
            Operation Id: DeploymentScripts_GetLogs
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.GetLogs(System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs
            Operation Id: DeploymentScripts_GetLogs
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient">
            <summary> A class to add extension methods to ManagementGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ManagementGroupResourceExtensionClient.GetArmDeployments">
            <summary> Gets a collection of ArmDeploymentResources in the ManagementGroupResource. </summary>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetArmDeployments">
            <summary> Gets a collection of ArmDeploymentResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetArmApplications">
            <summary> Gets a collection of ArmApplicationResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of ArmApplicationResources and their operations over a ArmApplicationResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetArmApplicationDefinitions">
            <summary> Gets a collection of ArmApplicationDefinitionResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of ArmApplicationDefinitionResources and their operations over a ArmApplicationDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetJitRequests">
            <summary> Gets a collection of JitRequestResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of JitRequestResources and their operations over a JitRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetArmDeploymentScripts">
            <summary> Gets a collection of ArmDeploymentScriptResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of ArmDeploymentScriptResources and their operations over a ArmDeploymentScriptResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourceGroupResourceExtensionClient.GetTemplateSpecs">
            <summary> Gets a collection of TemplateSpecResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of TemplateSpecResources and their operations over a TemplateSpecResource. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ResourcesExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.Resources. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployments(Azure.ResourceManager.Resources.TenantResource)">
            <summary> Gets a collection of ArmDeploymentResources in the TenantResource. </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployment(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.CalculateDeploymentTemplateHashAsync(Azure.ResourceManager.Resources.TenantResource,System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            Request Path: /providers/Microsoft.Resources/calculateTemplateHash
            Operation Id: Deployments_CalculateTemplateHash
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="template" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.CalculateDeploymentTemplateHash(Azure.ResourceManager.Resources.TenantResource,System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            Request Path: /providers/Microsoft.Resources/calculateTemplateHash
            Operation Id: Deployments_CalculateTemplateHash
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="template" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployments(Azure.ResourceManager.Resources.SubscriptionResource)">
            <summary> Gets a collection of ArmDeploymentResources in the SubscriptionResource. </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployment(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplications(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequestDefinitionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequestDefinitions(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScriptsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScripts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecs(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListBySubscription
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployments(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of ArmDeploymentResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployment(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplications(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of ArmApplicationResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmApplicationResources and their operations over a ArmApplicationResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplication(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationDefinitions(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of ArmApplicationDefinitionResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmApplicationDefinitionResources and their operations over a ArmApplicationDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationDefinitionAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationDefinition(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managed application definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}
            Operation Id: ApplicationDefinitions_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationDefinitionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequests(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of JitRequestResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of JitRequestResources and their operations over a JitRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequestAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequest(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScripts(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of ArmDeploymentScriptResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmDeploymentScriptResources and their operations over a ArmDeploymentScriptResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScriptAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScript(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}
            Operation Id: DeploymentScripts_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scriptName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecs(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary> Gets a collection of TemplateSpecResources in the ResourceGroupResource. </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of TemplateSpecResources and their operations over a TemplateSpecResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpec(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployments(Azure.ResourceManager.ManagementGroups.ManagementGroupResource)">
            <summary> Gets a collection of ArmDeploymentResources in the ManagementGroupResource. </summary>
            <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentAsync(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeployment(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            Request Path: /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}
            Operation Id: Deployments_GetAtScope
            </summary>
            <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmApplicationDefinitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetJitRequestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.JitRequestResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetArmDeploymentScriptResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetScriptLogResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ScriptLogResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.TemplateSpecResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesExtensions.GetTemplateSpecVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetArmDeployments">
            <summary> Gets a collection of ArmDeploymentResources in the SubscriptionResource. </summary>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetArmApplicationsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetArmApplications(System.Threading.CancellationToken)">
            <summary>
            Gets all the applications within a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications
            Operation Id: Applications_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetJitRequestDefinitionsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetJitRequestDefinitions(System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetArmDeploymentScriptsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetArmDeploymentScripts(System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts
            Operation Id: DeploymentScripts_ListBySubscription
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetTemplateSpecsAsync(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListBySubscription
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.SubscriptionResourceExtensionClient.GetTemplateSpecs(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListBySubscription
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TenantResourceExtensionClient">
            <summary> A class to add extension methods to TenantResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TenantResourceExtensionClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TenantResourceExtensionClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TenantResourceExtensionClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TenantResourceExtensionClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TenantResourceExtensionClient.GetArmDeployments">
            <summary> Gets a collection of ArmDeploymentResources in the TenantResource. </summary>
            <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TenantResourceExtensionClient.CalculateDeploymentTemplateHashAsync(System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            Request Path: /providers/Microsoft.Resources/calculateTemplateHash
            Operation Id: Deployments_CalculateTemplateHash
            </summary>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TenantResourceExtensionClient.CalculateDeploymentTemplateHash(System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            Request Path: /providers/Microsoft.Resources/calculateTemplateHash
            Operation Id: Deployments_CalculateTemplateHash
            </summary>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Resources.JitRequestCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.Resources.JitRequestCollection" /> instance call the GetJitRequests method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.JitRequestCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.JitRequestCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.JitRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: jitRequests_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="data"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.JitRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: jitRequests_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="data"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Retrieves all JIT requests within the resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests
            Operation Id: jitRequests_ListByResourceGroup
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jitRequestName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.JitRequestData">
            <summary> A class representing the JitRequest data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of JitRequestData. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Nullable{System.Guid},System.Collections.Generic.IList{Azure.ResourceManager.Resources.Models.JitAuthorizationPolicies},Azure.ResourceManager.Resources.Models.JitSchedulingPolicy,System.Nullable{Azure.ResourceManager.Resources.Models.ResourcesProvisioningState},System.Nullable{Azure.ResourceManager.Resources.Models.JitRequestState},Azure.ResourceManager.Resources.Models.ArmApplicationDetails,Azure.ResourceManager.Resources.Models.ArmApplicationDetails)">
            <summary> Initializes a new instance of JitRequestData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="applicationResourceId"> The parent application id. </param>
            <param name="publisherTenantId"> The publisher tenant id. </param>
            <param name="jitAuthorizationPolicies"> The JIT authorization policies. </param>
            <param name="jitSchedulingPolicy"> The JIT request properties. </param>
            <param name="provisioningState"> The JIT request provisioning state. </param>
            <param name="jitRequestState"> The JIT request state. </param>
            <param name="createdBy"> The client entity that created the JIT request. </param>
            <param name="updatedBy"> The client entity that last updated the JIT request. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.ApplicationResourceId">
            <summary> The parent application id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.PublisherTenantId">
            <summary> The publisher tenant id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.JitAuthorizationPolicies">
            <summary> The JIT authorization policies. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.JitSchedulingPolicy">
            <summary> The JIT request properties. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.ProvisioningState">
            <summary> The JIT request provisioning state. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.JitRequestState">
            <summary> The JIT request state. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.CreatedBy">
            <summary> The client entity that created the JIT request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestData.UpdatedBy">
            <summary> The client entity that last updated the JIT request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Resources.JitRequestResource">
            <summary>
            A Class representing a JitRequest along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetJitRequestResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetJitRequest method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.JitRequestData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.JitRequestResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.JitRequestResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: jitRequests_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: jitRequests_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.UpdateAsync(Azure.ResourceManager.Resources.Models.JitRequestPatch,System.Threading.CancellationToken)">
            <summary>
            Updates the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Update
            </summary>
            <param name="patch"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.Update(Azure.ResourceManager.Resources.Models.JitRequestPatch,System.Threading.CancellationToken)">
            <summary>
            Updates the JIT request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Update
            </summary>
            <param name="patch"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}
            Operation Id: JitRequests_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.#ctor">
            <summary> Initializes a new instance of ResourcesArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.#ctor">
            <summary> Initializes a new instance of ResourcesArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ResourcesArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ResourcesArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ScriptLogData">
            <summary> A class representing the ScriptLog data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogData.#ctor">
            <summary> Initializes a new instance of ScriptLogData. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String)">
            <summary> Initializes a new instance of ScriptLogData. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="log"> Script execution logs in text format. </param>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ScriptLogData.Log">
            <summary> Script execution logs in text format. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ApplicationDefinitionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition to delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition to delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary> Creates a new managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationDefinitionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmApplicationDefinitionData,System.Threading.CancellationToken)">
            <summary> Creates a new managed application definition. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationDefinitionName"> The name of the managed application definition. </param>
            <param name="data"> Parameters supplied to the create or update an managed application definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationDefinitionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists the managed application definitions in a resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists the managed application definitions in a resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists the managed application definitions in a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationDefinitionsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists the managed application definitions in a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ApplicationsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmApplicationData,System.Threading.CancellationToken)">
            <summary> Creates a new managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="data"> Parameters supplied to the create or update a managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmApplicationData,System.Threading.CancellationToken)">
            <summary> Creates a new managed application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="data"> Parameters supplied to the create or update a managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing managed application. The only value that can be updated via PATCH currently is the tags. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="patch"> Parameters supplied to update an existing managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmApplicationPatch,System.Threading.CancellationToken)">
            <summary> Updates an existing managed application. The only value that can be updated via PATCH currently is the tags. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="patch"> Parameters supplied to update an existing managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="applicationName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.RefreshPermissionsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Refresh Permissions for application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.RefreshPermissions(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Refresh Permissions for application. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="applicationName"> The name of the managed application. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ApplicationsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all the applications within a subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DeploymentRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.GetAtScopeAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployments operation. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="operationId"> The ID of the operation to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="operationId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.GetAtScope(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployments operation. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="operationId"> The ID of the operation to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="operationId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.ListAtScopeAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets all deployments operations for a deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.ListAtScope(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets all deployments operations for a deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.ListAtScopeNextPageAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets all deployments operations for a deployment. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentRestOperations.ListAtScopeNextPage(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets all deployments operations for a deployment. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="top"> The number of results to return. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DeploymentScriptsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.CreateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmDeploymentScriptData,System.Threading.CancellationToken)">
            <summary> Creates a deployment script. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="data"> Deployment script supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="scriptName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.Create(System.String,System.String,System.String,Azure.ResourceManager.Resources.ArmDeploymentScriptData,System.Threading.CancellationToken)">
            <summary> Creates a deployment script. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="data"> Deployment script supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="scriptName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch,System.Threading.CancellationToken)">
            <summary> Updates deployment script tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="patch"> Deployment script resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="scriptName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentScriptPatch,System.Threading.CancellationToken)">
            <summary> Updates deployment script tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="patch"> Deployment script resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="scriptName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployment script with a given name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployment script with a given name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a deployment script. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a deployment script. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all deployment scripts for a given subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> Lists all deployment scripts for a given subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.GetLogsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deployment script logs for a given deployment script name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.GetLogs(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deployment script logs for a given deployment script name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.GetLogsDefaultAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets deployment script logs for a given deployment script name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="tail"> The number of lines to show from the tail of the deployment script log. Valid value is a positive number up to 1000. If 'tail' is not provided, all available logs are shown up to container instance log capacity of 4mb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.GetLogsDefault(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets deployment script logs for a given deployment script name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="scriptName"> Name of the deployment script. </param>
            <param name="tail"> The number of lines to show from the tail of the deployment script log. Valid value is a positive number up to 1000. If 'tail' is not provided, all available logs are shown up to container instance log capacity of 4mb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deployments scripts. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deployments scripts. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all deployment scripts for a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all deployment scripts for a given subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deployments scripts. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentScriptsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deployments scripts. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DeploymentsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.DeleteAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.DeleteAtScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CheckExistenceAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Checks whether the deployment exists. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CheckExistenceAtScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Checks whether the deployment exists. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CreateOrUpdateAtScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CreateOrUpdateAtScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Additional parameters supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.GetAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.GetAtScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CancelAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CancelAtScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ValidateAtScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ValidateAtScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentContent,System.Threading.CancellationToken)">
            <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ExportTemplateAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Exports the template used for specified deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ExportTemplateAtScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Exports the template used for specified deployment. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="deploymentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ListAtScopeAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Get all the deployments at the given scope. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ListAtScope(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Get all the deployments at the given scope. </summary>
            <param name="scope"> The resource scope. </param>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtTenantScopeAsync(System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the tenant group. </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtTenantScope(System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the tenant group. </summary>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtManagementGroupScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the management group. </summary>
            <param name="groupId"> The management group ID. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupId" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="groupId" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtManagementGroupScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the management group. </summary>
            <param name="groupId"> The management group ID. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="groupId" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="groupId" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtSubscriptionScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to What If. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAtSubscriptionScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to What If. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIfAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.WhatIf(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.ArmDeploymentWhatIfContent,System.Threading.CancellationToken)">
            <summary> Returns changes that will be made by the deployment if executed at the scope of the resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
            <param name="deploymentName"> The name of the deployment. </param>
            <param name="content"> Parameters to validate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="deploymentName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CalculateTemplateHashAsync(System.BinaryData,System.Threading.CancellationToken)">
            <summary> Calculate the hash of the given template. </summary>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="template" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.CalculateTemplateHash(System.BinaryData,System.Threading.CancellationToken)">
            <summary> Calculate the hash of the given template. </summary>
            <param name="template"> The template provided to calculate hash. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="template" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ListAtScopeNextPageAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Get all the deployments at the given scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The resource scope. </param>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.DeploymentsRestOperations.ListAtScopeNextPage(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Get all the deployments at the given scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The resource scope. </param>
            <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
            <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of JitRequestsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.JitRequestData,System.Threading.CancellationToken)">
            <summary> Creates or updates the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="data"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="jitRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Resources.JitRequestData,System.Threading.CancellationToken)">
            <summary> Creates or updates the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="data"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="jitRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.JitRequestPatch,System.Threading.CancellationToken)">
            <summary> Updates the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="patch"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="jitRequestName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.JitRequestPatch,System.Threading.CancellationToken)">
            <summary> Updates the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="patch"> Parameters supplied to the update JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="jitRequestName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the JIT request. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="jitRequestName"> The name of the JIT request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves all JIT requests within the subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves all JIT requests within the subscription. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieves all JIT requests within the resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Retrieves all JIT requests within the resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TemplateSpecsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.TemplateSpecData,System.Threading.CancellationToken)">
            <summary> Creates or updates a Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="data"> Template Spec supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Resources.TemplateSpecData,System.Threading.CancellationToken)">
            <summary> Creates or updates a Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="data"> Template Spec supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.TemplateSpecPatch,System.Threading.CancellationToken)">
            <summary> Updates Template Spec tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="patch"> Template Spec resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.TemplateSpecPatch,System.Threading.CancellationToken)">
            <summary> Updates Template Spec tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="patch"> Template Spec resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.GetAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Gets a Template Spec with a given name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.Get(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Gets a Template Spec with a given name. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a Template Spec by name. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a Template Spec by name. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListBySubscriptionAsync(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified subscriptions. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListBySubscription(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified subscriptions. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListByResourceGroup(System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified resource group. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified subscriptions. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified subscriptions. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary> Lists all the Template Specs within the specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TemplateSpecVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.TemplateSpecVersionData,System.Threading.CancellationToken)">
            <summary> Creates or updates a Template Spec version. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="data"> Template Spec Version supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" />, <paramref name="templateSpecVersion" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.TemplateSpecVersionData,System.Threading.CancellationToken)">
            <summary> Creates or updates a Template Spec version. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="data"> Template Spec Version supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" />, <paramref name="templateSpecVersion" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch,System.Threading.CancellationToken)">
            <summary> Updates Template Spec Version tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="patch"> Template Spec Version resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" />, <paramref name="templateSpecVersion" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch,System.Threading.CancellationToken)">
            <summary> Updates Template Spec Version tags with specified values. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="patch"> Template Spec Version resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" />, <paramref name="templateSpecVersion" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a Template Spec version from a specific Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a Template Spec version from a specific Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a specific version from a Template Spec. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a specific version from a Template Spec. When operation completes, status code 200 returned without content. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="templateSpecName" /> or <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the Template Spec versions in the specified Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the Template Spec versions in the specified Template Spec. </summary>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the Template Spec versions in the specified Template Spec. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionsRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the Template Spec versions in the specified Template Spec. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The Microsoft Azure subscription ID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.ScriptLogResource">
            <summary>
            A Class representing a ScriptLog along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetScriptLogResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> using the GetScriptLog method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.ScriptLogData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.ScriptLogResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ScriptLogResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.ScriptLogResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.GetAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs/default
            Operation Id: DeploymentScripts_GetLogsDefault
            </summary>
            <param name="tail"> The number of lines to show from the tail of the deployment script log. Valid value is a positive number up to 1000. If 'tail' is not provided, all available logs are shown up to container instance log capacity of 4mb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ScriptLogResource.Get(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs/default
            Operation Id: DeploymentScripts_GetLogsDefault
            </summary>
            <param name="tail"> The number of lines to show from the tail of the deployment script log. Valid value is a positive number up to 1000. If 'tail' is not provided, all available logs are shown up to container instance log capacity of 4mb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecCollection" /> instance call the GetTemplateSpecs method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.TemplateSpecData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="data"> Template Spec supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.TemplateSpecData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="data"> Template Spec supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.GetAsync(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.Get(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.GetAllAsync(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListByResourceGroup
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.GetAll(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs
            Operation Id: TemplateSpecs_ListByResourceGroup
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.ExistsAsync(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.Exists(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="templateSpecName"> Name of the Template Spec. </param>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecResource">
            <summary>
            A Class representing a TemplateSpec along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetTemplateSpecResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetTemplateSpec method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.TemplateSpecData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.TemplateSpecResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.GetTemplateSpecVersions">
            <summary> Gets a collection of TemplateSpecVersionResources in the TemplateSpec. </summary>
            <returns> An object representing collection of TemplateSpecVersionResources and their operations over a TemplateSpecVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.GetTemplateSpecVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.GetTemplateSpecVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.GetAsync(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.Get(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.UpdateAsync(Azure.ResourceManager.Resources.Models.TemplateSpecPatch,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Update
            </summary>
            <param name="patch"> Template Spec resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.Update(Azure.ResourceManager.Resources.Models.TemplateSpecPatch,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Update
            </summary>
            <param name="patch"> Template Spec resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}
            Operation Id: TemplateSpecs_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" />.
            To get a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionCollection" /> instance call the GetTemplateSpecVersions method from an instance of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.TemplateSpecVersionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec version.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="data"> Template Spec Version supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Resources.TemplateSpecVersionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec version.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_CreateOrUpdate
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="data"> Template Spec Version supplied to the operation. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions
            Operation Id: TemplateSpecVersions_List
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions
            Operation Id: TemplateSpecVersions_List
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="templateSpecVersion"> The version of the Template Spec. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="templateSpecVersion" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="templateSpecVersion" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource">
            <summary>
            A Class representing a TemplateSpecVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetTemplateSpecVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> using the GetTemplateSpecVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Resources.TemplateSpecVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="F:Azure.ResourceManager.Resources.TemplateSpecVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Resources.TemplateSpecVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version from a Template Spec. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version from a Template Spec. When operation completes, status code 200 returned without content.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Delete
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.UpdateAsync(Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec Version tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Update
            </summary>
            <param name="patch"> Template Spec Version resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.Update(Azure.ResourceManager.Resources.Models.TemplateSpecVersionPatch,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec Version tags with specified values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Update
            </summary>
            <param name="patch"> Template Spec Version resource with the tags to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}
            Operation Id: TemplateSpecVersions_Get
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter">
            <summary> JsonConverter for managed service identity type v3. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Write(System.Text.Json.Utf8JsonWriter,Azure.ResourceManager.Models.ManagedServiceIdentityType,System.Text.Json.JsonSerializerOptions)">
            <summary> Serialize managed service identity type to v3 format. </summary>
            <param name="writer"> The writer. </param>
            <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary> Deserialize managed service identity type from v3 format. </summary>
            <param name="reader"> The reader. </param>
            <param name="typeToConvert"> The type to convert </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="T:Azure.ResourceManager.SharedExtensions">
            <summary>
            helper class
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.SubstringAfterProviderNamespace(Azure.Core.ResourceIdentifier)">
            <summary>
            Collects the segments in a resource identifier into a string
            </summary>
            <param name="resourceId">the resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.ReplaceWith(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            An extension method for supporting replacing one dictionary content with another one.
            This is used to support resource tags.
            </summary>
            <param name="dest"> The destination dictionary in which the content will be replaced. </param>
            <param name="src"> The source dictionary from which the content is copied from. </param>
            <returns> The destination dictionary that has been altered. </returns>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.BuildPageForResponse(Azure.Response,System.String,System.String)">
            <summary>
            Returns a <see cref="T:Azure.Page`1" /> for a given response.
            </summary>
            <param name="response"></param>
            <param name="itemPropertyName"></param>
            <param name="nextLinkPropertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" />. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy" /> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval" />.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#ArmApplicationResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#ArmApplicationResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#ArmApplicationDefinitionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#ArmApplicationDefinitionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#ArmDeploymentResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#ArmDeploymentResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#ArmDeploymentScriptResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.ArmDeploymentScriptCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#ArmDeploymentScriptResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#JitRequestResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.JitRequestCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#JitRequestResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#TemplateSpecResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#TemplateSpecResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Resources#TemplateSpecVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Resources.TemplateSpecVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Resources#TemplateSpecVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
